{"ast":null,"code":"var _jsxFileName = \"/home/boris/Documents/backup-25.10.2022/b/react/quotes-router-app/src/components/quotes/QuoteList.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from 'react';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) return quoteA.id > quoteB.id ? 1 : -1;else return quoteA.id < quoteB.id ? 1 : -1;\n  });\n};\nconst QuoteList = props => {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`\n    });\n    history.push(`${location.pathname}?sort=` + (isSortingAscending ? 'desc' : 'asc'));\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","QuoteItem","classes","useHistory","useLocation","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","changeSortingHandler","push","pathname","sorting","list","map","quote","author","text"],"sources":["/home/boris/Documents/backup-25.10.2022/b/react/quotes-router-app/src/components/quotes/QuoteList.js"],"sourcesContent":["import {Fragment} from 'react';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n        if (ascending) return quoteA.id > quoteB.id ? 1 : -1;\n        else return quoteA.id < quoteB.id ? 1 : -1;\n    })\n}\n\nconst QuoteList = (props) => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const queryParams = new URLSearchParams(location.search);\n\n    const isSortingAscending = queryParams.get('sort') === 'asc';\n\n    const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n    const changeSortingHandler = () => {\n        history.push({\n            pathname: location.pathname,\n            search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n        });\n        history.push(`${location.pathname}?sort=` + (isSortingAscending ? 'desc' : 'asc'));\n    }\n\n    return (\n        <Fragment>\n            <div className={classes.sorting}>\n                <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n            </div>\n            <ul className={classes.list}>\n                {sortedQuotes.map((quote) => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.text}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default QuoteList;\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,SAAQC,UAAU,EAAEC,WAAW,QAAO,kBAAkB;AAAC;AAEzD,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,SAAS,KAAK;EACtC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAK;IACnC,IAAIH,SAAS,EAAE,OAAOE,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAChD,OAAOF,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC9C,CAAC,CAAC;AACN,CAAC;AAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAMC,OAAO,GAAGX,UAAU,EAAE;EAC5B,MAAMY,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EAExD,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK;EAE5D,MAAMC,YAAY,GAAGhB,UAAU,CAACQ,KAAK,CAACP,MAAM,EAAEa,kBAAkB,CAAC;EAEjE,MAAMG,oBAAoB,GAAG,MAAM;IAC/BR,OAAO,CAACS,IAAI,CAAC;MACTC,QAAQ,EAAET,QAAQ,CAACS,QAAQ;MAC3BN,MAAM,EAAG,SAASC,kBAAkB,GAAG,MAAM,GAAG,KAAO;IAC3D,CAAC,CAAC;IACFL,OAAO,CAACS,IAAI,CAAE,GAAER,QAAQ,CAACS,QAAS,QAAO,IAAIL,kBAAkB,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC;EACtF,CAAC;EAED,oBACI,QAAC,QAAQ;IAAA,wBACL;MAAK,SAAS,EAAEjB,OAAO,CAACuB,OAAQ;MAAA,uBAC5B;QAAQ,OAAO,EAAEH,oBAAqB;QAAA,oBAAOH,kBAAkB,GAAG,YAAY,GAAG,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QACpG,eACN;MAAI,SAAS,EAAEjB,OAAO,CAACwB,IAAK;MAAA,UACvBL,YAAY,CAACM,GAAG,CAAEC,KAAK,iBACpB,QAAC,SAAS;QAEN,EAAE,EAAEA,KAAK,CAACjB,EAAG;QACb,MAAM,EAAEiB,KAAK,CAACC,MAAO;QACrB,IAAI,EAAED,KAAK,CAACE;MAAK,GAHZF,KAAK,CAACjB,EAAE;QAAA;QAAA;QAAA;MAAA,QAKpB;IAAC;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEnB,CAAC;AAAC,GAnCIC,SAAS;EAAA,QACKT,UAAU,EACTC,WAAW;AAAA;AAAA,KAF1BQ,SAAS;AAqCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}