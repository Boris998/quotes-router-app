{"ast":null,"code":"var _jsxFileName = \"/home/boris/Documents/backup-25.10.2022/b/react/quotes-router-app/src/components/comments/Comments.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  const {\n    quoteId\n  } = params;\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [params]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"UhutHWblW7V3IC7CYBhRN+7PvgE=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","classes","NewCommentForm","useParams","useHttp","getAllComments","Comments","isAddingComment","setIsAddingComment","params","sendRequest","status","data","loadedComments","quoteId","startAddCommentHandler","addedCommentHandler","comments"],"sources":["/home/boris/Documents/backup-25.10.2022/b/react/quotes-router-app/src/components/comments/Comments.js"],"sourcesContent":["import {useEffect, useState} from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport {useParams} from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport {getAllComments} from \"../../lib/api\";\n\nconst Comments = () => {\n    const [isAddingComment, setIsAddingComment] = useState(false);\n    const params = useParams();\n    const {sendRequest, status, data: loadedComments} = useHttp(getAllComments);\n    const {quoteId} = params; \n\n    useEffect(() => {\n        sendRequest(params.quoteId);\n    }, [params]);\n\n    const startAddCommentHandler = () => {\n        setIsAddingComment(true);\n    };\n\n    const addedCommentHandler = () => {\n\n    };\n\n    return (\n        <section className={classes.comments}>\n            <h2>User Comments</h2>\n            {!isAddingComment && (\n                <button className='btn' onClick={startAddCommentHandler}>\n                    Add a Comment\n                </button>\n            )}\n            {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler}/>}\n            <p>Comments...</p>\n        </section>\n    );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAAQC,cAAc,QAAO,eAAe;AAAC;AAE7C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMS,MAAM,GAAGN,SAAS,EAAE;EAC1B,MAAM;IAACO,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC;EAAc,CAAC,GAAGT,OAAO,CAACC,cAAc,CAAC;EAC3E,MAAM;IAACS;EAAO,CAAC,GAAGL,MAAM;EAExBV,SAAS,CAAC,MAAM;IACZW,WAAW,CAACD,MAAM,CAACK,OAAO,CAAC;EAC/B,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,MAAMM,sBAAsB,GAAG,MAAM;IACjCP,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMQ,mBAAmB,GAAG,MAAM,CAElC,CAAC;EAED,oBACI;IAAS,SAAS,EAAEf,OAAO,CAACgB,QAAS;IAAA,wBACjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACV,eAAe,iBACb;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEQ,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAG3D,EACAR,eAAe,iBAAI,QAAC,cAAc;MAAC,OAAO,EAAEE,MAAM,CAACK,OAAQ;MAAC,cAAc,EAAEE;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAE,eACnG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QACZ;AAElB,CAAC;AAAC,GA9BIV,QAAQ;EAAA,QAEKH,SAAS,EAC4BC,OAAO;AAAA;AAAA,KAHzDE,QAAQ;AAgCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}